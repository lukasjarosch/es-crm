// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crm/eventstore/v1/event_store_api.proto

package eventstorev1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetEventsRequest struct {
	Filter               *EventFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetEventsRequest) Reset()         { *m = GetEventsRequest{} }
func (m *GetEventsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventsRequest) ProtoMessage()    {}
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_abaa3928b09b3343, []int{0}
}

func (m *GetEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsRequest.Unmarshal(m, b)
}
func (m *GetEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsRequest.Marshal(b, m, deterministic)
}
func (m *GetEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsRequest.Merge(m, src)
}
func (m *GetEventsRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventsRequest.Size(m)
}
func (m *GetEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsRequest proto.InternalMessageInfo

func (m *GetEventsRequest) GetFilter() *EventFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type GetEventsResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventsResponse) Reset()         { *m = GetEventsResponse{} }
func (m *GetEventsResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventsResponse) ProtoMessage()    {}
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_abaa3928b09b3343, []int{1}
}

func (m *GetEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsResponse.Unmarshal(m, b)
}
func (m *GetEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsResponse.Marshal(b, m, deterministic)
}
func (m *GetEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsResponse.Merge(m, src)
}
func (m *GetEventsResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventsResponse.Size(m)
}
func (m *GetEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsResponse proto.InternalMessageInfo

func (m *GetEventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type CreateEventRequest struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventRequest) Reset()         { *m = CreateEventRequest{} }
func (m *CreateEventRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEventRequest) ProtoMessage()    {}
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_abaa3928b09b3343, []int{2}
}

func (m *CreateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventRequest.Unmarshal(m, b)
}
func (m *CreateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventRequest.Marshal(b, m, deterministic)
}
func (m *CreateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventRequest.Merge(m, src)
}
func (m *CreateEventRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEventRequest.Size(m)
}
func (m *CreateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventRequest proto.InternalMessageInfo

func (m *CreateEventRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type CreateEventResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventResponse) Reset()         { *m = CreateEventResponse{} }
func (m *CreateEventResponse) String() string { return proto.CompactTextString(m) }
func (*CreateEventResponse) ProtoMessage()    {}
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_abaa3928b09b3343, []int{3}
}

func (m *CreateEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventResponse.Unmarshal(m, b)
}
func (m *CreateEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventResponse.Marshal(b, m, deterministic)
}
func (m *CreateEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventResponse.Merge(m, src)
}
func (m *CreateEventResponse) XXX_Size() int {
	return xxx_messageInfo_CreateEventResponse.Size(m)
}
func (m *CreateEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetEventsRequest)(nil), "crm.eventstore.v1.GetEventsRequest")
	proto.RegisterType((*GetEventsResponse)(nil), "crm.eventstore.v1.GetEventsResponse")
	proto.RegisterType((*CreateEventRequest)(nil), "crm.eventstore.v1.CreateEventRequest")
	proto.RegisterType((*CreateEventResponse)(nil), "crm.eventstore.v1.CreateEventResponse")
}

func init() {
	proto.RegisterFile("crm/eventstore/v1/event_store_api.proto", fileDescriptor_abaa3928b09b3343)
}

var fileDescriptor_abaa3928b09b3343 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4f, 0x2e, 0xca, 0xd5,
	0x4f, 0x2d, 0x4b, 0xcd, 0x2b, 0x29, 0x2e, 0xc9, 0x2f, 0x4a, 0xd5, 0x2f, 0x33, 0x84, 0xf0, 0xe2,
	0xc1, 0xdc, 0xf8, 0xc4, 0x82, 0x4c, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0x21, 0xc1, 0xe4, 0xa2,
	0x5c, 0x3d, 0x84, 0x42, 0xbd, 0x32, 0x43, 0x29, 0x65, 0xbc, 0x7a, 0x21, 0xfa, 0x94, 0xbc, 0xb8,
	0x04, 0xdc, 0x53, 0x4b, 0x5c, 0xc1, 0xaa, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xcc,
	0xb8, 0xd8, 0xd2, 0x32, 0x73, 0x4a, 0x52, 0x8b, 0x24, 0x18, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0xe4,
	0xf4, 0x30, 0x0c, 0xd7, 0x03, 0xeb, 0x70, 0x03, 0xab, 0x0a, 0x82, 0xaa, 0x56, 0x72, 0xe5, 0x12,
	0x44, 0x32, 0xab, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0xc8, 0x80, 0x8b, 0x0d, 0xa2, 0x53, 0x82,
	0x51, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x02, 0x97, 0x61, 0x41, 0x50, 0x75, 0x4a, 0x2e, 0x5c, 0x42,
	0xce, 0x45, 0xa9, 0x89, 0x25, 0xa9, 0x10, 0x61, 0xa8, 0xa3, 0xf4, 0xb8, 0x58, 0xc1, 0xf2, 0x50,
	0x37, 0xe1, 0x36, 0x06, 0xa2, 0x4c, 0x49, 0x94, 0x4b, 0x18, 0xc5, 0x14, 0x88, 0x73, 0x8c, 0x8e,
	0x32, 0x72, 0xf1, 0x82, 0x45, 0x82, 0x41, 0xba, 0x1c, 0x03, 0x3c, 0x85, 0xc2, 0xb8, 0x38, 0xe1,
	0xae, 0x16, 0x52, 0xc6, 0x62, 0x2c, 0x7a, 0xf8, 0x48, 0xa9, 0xe0, 0x57, 0x04, 0xf5, 0x78, 0x0c,
	0x17, 0x37, 0x92, 0x03, 0x84, 0x54, 0xb1, 0x68, 0xc2, 0xf4, 0xa6, 0x94, 0x1a, 0x21, 0x65, 0x10,
	0xd3, 0x9d, 0x32, 0xb9, 0x44, 0x93, 0xf3, 0x73, 0x31, 0x15, 0x3b, 0x09, 0x21, 0xf9, 0xae, 0x20,
	0x33, 0x00, 0x14, 0xc9, 0x01, 0x8c, 0x51, 0x3c, 0x08, 0x45, 0x65, 0x86, 0x8b, 0x98, 0x98, 0x9d,
	0x5d, 0x23, 0x56, 0x31, 0x09, 0x3a, 0x17, 0xe5, 0x42, 0x02, 0x0d, 0xa2, 0x3b, 0xcc, 0xf0, 0x14,
	0x58, 0x2c, 0x06, 0x21, 0x16, 0x13, 0x66, 0x98, 0xc4, 0x06, 0x4e, 0x29, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xc2, 0x73, 0xea, 0xa4, 0x8c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventStoreAPIClient is the client API for EventStoreAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventStoreAPIClient interface {
	// GetEvents will return events, given a filter.
	GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error)
	// CreateEvent will store an event with the given Event data.
	CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*CreateEventResponse, error)
}

type eventStoreAPIClient struct {
	cc *grpc.ClientConn
}

func NewEventStoreAPIClient(cc *grpc.ClientConn) EventStoreAPIClient {
	return &eventStoreAPIClient{cc}
}

func (c *eventStoreAPIClient) GetEvents(ctx context.Context, in *GetEventsRequest, opts ...grpc.CallOption) (*GetEventsResponse, error) {
	out := new(GetEventsResponse)
	err := c.cc.Invoke(ctx, "/crm.eventstore.v1.EventStoreAPI/GetEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventStoreAPIClient) CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*CreateEventResponse, error) {
	out := new(CreateEventResponse)
	err := c.cc.Invoke(ctx, "/crm.eventstore.v1.EventStoreAPI/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventStoreAPIServer is the server API for EventStoreAPI service.
type EventStoreAPIServer interface {
	// GetEvents will return events, given a filter.
	GetEvents(context.Context, *GetEventsRequest) (*GetEventsResponse, error)
	// CreateEvent will store an event with the given Event data.
	CreateEvent(context.Context, *CreateEventRequest) (*CreateEventResponse, error)
}

// UnimplementedEventStoreAPIServer can be embedded to have forward compatible implementations.
type UnimplementedEventStoreAPIServer struct {
}

func (*UnimplementedEventStoreAPIServer) GetEvents(ctx context.Context, req *GetEventsRequest) (*GetEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvents not implemented")
}
func (*UnimplementedEventStoreAPIServer) CreateEvent(ctx context.Context, req *CreateEventRequest) (*CreateEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}

func RegisterEventStoreAPIServer(s *grpc.Server, srv EventStoreAPIServer) {
	s.RegisterService(&_EventStoreAPI_serviceDesc, srv)
}

func _EventStoreAPI_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventStoreAPIServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crm.eventstore.v1.EventStoreAPI/GetEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventStoreAPIServer).GetEvents(ctx, req.(*GetEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventStoreAPI_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventStoreAPIServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crm.eventstore.v1.EventStoreAPI/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventStoreAPIServer).CreateEvent(ctx, req.(*CreateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventStoreAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crm.eventstore.v1.EventStoreAPI",
	HandlerType: (*EventStoreAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEvents",
			Handler:    _EventStoreAPI_GetEvents_Handler,
		},
		{
			MethodName: "CreateEvent",
			Handler:    _EventStoreAPI_CreateEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "crm/eventstore/v1/event_store_api.proto",
}
